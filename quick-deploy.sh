#!/bin/bash

# Script de deploy r√°pido para AgroLearning
# Execute este script no seu computador local

set -e

SERVER_IP="185.187.169.198"
SERVER_USER="root"  # Altere se usar outro usu√°rio
REPO_NAME="agrolearning"

echo "üöÄ Deploy R√°pido - AgroLearning"
echo "=================================="

# Verificar se Git est√° configurado
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå Este diret√≥rio n√£o √© um reposit√≥rio Git!"
    echo "Execute: git init && git add . && git commit -m 'Initial commit'"
    exit 1
fi

# Verificar se h√° mudan√ßas n√£o commitadas
if ! git diff-index --quiet HEAD --; then
    echo "‚ö†Ô∏è  H√° mudan√ßas n√£o commitadas. Fazendo commit automaticamente..."
    git add .
    git commit -m "Deploy: $(date '+%Y-%m-%d %H:%M:%S')"
fi

# Verificar se remote origin existe
if ! git remote get-url origin > /dev/null 2>&1; then
    echo "‚ùå Remote 'origin' n√£o configurado!"
    echo "Configure seu reposit√≥rio GitHub primeiro:"
    echo "git remote add origin https://github.com/SEU_USUARIO/$REPO_NAME.git"
    exit 1
fi

# Push para o reposit√≥rio
echo "üì§ Enviando c√≥digo para o reposit√≥rio..."
git push origin main

# Verificar conectividade com servidor
echo "üîå Testando conex√£o com servidor..."
if ! ssh -o ConnectTimeout=10 $SERVER_USER@$SERVER_IP "echo 'Conex√£o OK'"; then
    echo "‚ùå N√£o foi poss√≠vel conectar ao servidor!"
    echo "Verifique:"
    echo "  - IP do servidor: $SERVER_IP"
    echo "  - Usu√°rio: $SERVER_USER"
    echo "  - Chave SSH configurada"
    exit 1
fi

# Menu de op√ß√µes
echo ""
echo "Escolha uma op√ß√£o:"
echo "1) Configura√ß√£o inicial do servidor (primeira vez)"
echo "2) Deploy da aplica√ß√£o"
echo "3) Atualiza√ß√£o r√°pida (apenas c√≥digo)"
echo "4) Deploy completo (configura√ß√£o + aplica√ß√£o)"
echo ""
read -p "Op√ß√£o (1-4): " option

case $option in
    1)
        echo "üîß Executando configura√ß√£o inicial do servidor..."
        ssh $SERVER_USER@$SERVER_IP 'bash -s' < server-setup.sh
        echo "‚úÖ Configura√ß√£o inicial conclu√≠da!"
        ;;
    2)
        echo "üöÄ Fazendo deploy da aplica√ß√£o..."
        # Primeiro, enviar o script de deploy
        scp deploy.sh $SERVER_USER@$SERVER_IP:/tmp/
        # Executar no servidor
        ssh $SERVER_USER@$SERVER_IP "chmod +x /tmp/deploy.sh && /tmp/deploy.sh"
        echo "‚úÖ Deploy conclu√≠do!"
        ;;
    3)
        echo "üîÑ Fazendo atualiza√ß√£o r√°pida..."
        # Enviar script de update
        scp update.sh $SERVER_USER@$SERVER_IP:/tmp/
        # Executar no servidor
        ssh $SERVER_USER@$SERVER_IP "chmod +x /tmp/update.sh && /tmp/update.sh"
        echo "‚úÖ Atualiza√ß√£o conclu√≠da!"
        ;;
    4)
        echo "üöÄ Fazendo deploy completo..."
        # Configura√ß√£o inicial
        ssh $SERVER_USER@$SERVER_IP 'bash -s' < server-setup.sh
        echo "‚úÖ Configura√ß√£o inicial conclu√≠da!"
        
        # Deploy da aplica√ß√£o
        scp deploy.sh $SERVER_USER@$SERVER_IP:/tmp/
        ssh $SERVER_USER@$SERVER_IP "chmod +x /tmp/deploy.sh && /tmp/deploy.sh"
        echo "‚úÖ Deploy completo conclu√≠do!"
        ;;
    *)
        echo "‚ùå Op√ß√£o inv√°lida!"
        exit 1
        ;;
esac

echo ""
echo "üéâ Processo conclu√≠do!"
echo "üåê Acesse sua aplica√ß√£o em: http://$SERVER_IP"
echo ""
echo "üìã Comandos √∫teis para o servidor:"
echo "  ssh $SERVER_USER@$SERVER_IP"
echo "  pm2 status"
echo "  pm2 logs agrolearning"
echo "  sudo systemctl status nginx"
